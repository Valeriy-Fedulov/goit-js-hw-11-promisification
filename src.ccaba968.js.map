{"version":3,"sources":["js/task1.js","index.js"],"names":["delay","ms","Promise","resolve","reject","setTimeout","logger","time","console","log","then"],"mappings":";AAKA,MAAMA,EAAQC,IACI,IAAIC,QAAQ,CAACC,EAASC,KACpCC,WAAW,KACCC,GACTL,MAIDK,EAASC,GAAQC,QAAQC,sBAAsBF,OAGrDP,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,MAAMU,KAAKJ;;AChBjB,aAAA,QAAA","file":"src.ccaba968.js","sourceRoot":"../src","sourcesContent":["// Напиши функцию delay(ms), которая возвращает промис, \n// переходящий в состояние \"resolved\" через ms миллисекунд.\n// Значением исполнившегося промиса должно быть то кол - во миллисекунд \n// которое передали во время вызова функции delay.\n\nconst delay = ms => {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve = logger;\n    }, ms);\n  });\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n\n","// import './sass/main.scss';\n\nimport './js/task1.js';\n// import './js/task2.js';\n// import './js/task3.js';"]}